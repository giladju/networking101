---
- hosts: ops
  connection: local
  become: False
  gather_facts: False
  vars:
      vpc: '{{ vpc_facts.vpcs.0.id }}'
      has_loadbalancer: '{{ (instances|selectattr("role", "equalto", item.tags.role)|first).loadbalancer }}'
  tasks:
      - name: Assertions
        assert:
          that:
              - region is defined
              - envname is defined
              - instances is iterable

      - name: Get VPC facts
        ec2_vpc_net_facts:
            region: '{{ region }}'
            filters:
                "tag:environment": '{{ envname }}'
        register: vpc_facts

      - name: Get ELB facts
        ec2_elb_facts:
            region: '{{ region }}'
        register: elb_facts

      - name: Get EC2 instances facts
        ec2_remote_facts:
            region: '{{ region }}'
            filters:
                vpc-id: '{{ vpc }}'
        register: instance_facts

      - name: Add instances to load balancer
        with_items: '{{ instance_facts.instances }}'
        when: has_loadbalancer is defined and has_loadbalancer
        ec2_elb:
            ec2_elbs: ["{{ envname }}-{{ item.tags.role }}"]
            instance_id: '{{ item.id }}'
            state: present
            region: '{{ region }}'
