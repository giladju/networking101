---
# tasks file for vpc
- name: Assertions
  assert:
      that:
          - region is defined
          - envname is defined
          - cidr_block is defined
          - subnets is iterable
          - availability_zone is defined
          # - routing_tables is iterable
          - security_groups is iterable
- name: Create VPC
  ec2_vpc_net:
    region: "{{ region }}"
    state: present
    cidr_block: '{{ cidr_block }}'
    name: '{{ envname }}'
    tags:
        environment: '{{ envname }}'
        Name: '{{ envname }}'
  register: tikal_current_vpc
- name: create default internet gateway
  ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: '{{ tikal_current_vpc.vpc.id }}'
  register: tikal_current_vpc_igw_facts
- name: Create subnets
  with_dict: '{{ subnets }}'
  ec2_vpc_subnet:
      state: present
      region: '{{ region }}'
      vpc_id: '{{ tikal_current_vpc.vpc.id }}'
      cidr: '{{ item.value }}'
      az: '{{ availability_zone }}'
      tags:
          Name: '{{ envname }}_{{ item.key }}'
          net: '{{ item.key }}'
          environment: '{{ envname }}'
- name: gather subnet facts 
  ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      vpc_id: '{{ tikal_current_vpc.vpc.id }}'
  register: tikal_ec2_vpc_subnet_facts 
- name: set_fact current id of public subnet
  set_fact:
    nat_public_subnet: "{{ (tikal_ec2_vpc_subnet_facts.subnets | selectattr('tags.net', 'equalto', 'public')|first).id }}"
- name: Create new nat gateway
  ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ nat_public_subnet }}"
    region: "{{ region }}"
    wait: yes
    if_exist_do_not_create: true
  register: nat_gateway
- name: get vpcs facts
  ec2_vpc_net_facts:
    region: "{{ region }}"
  register: tikal_ec2_vpc_net_facts
- name: set fact current vpc id
  set_fact:
    current_vpc_id: "{{ tikal_ec2_vpc_net_facts.vpcs | list | selectattr('tags.environment', 'equalto', envname)| map(attribute='id') }}"
- name: Create routing tables
  with_items: '{{ routing_tables }}'
  ec2_vpc_route_table:
    vpc_id: "{{ tikal_current_vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      Name: '{{ envname }}_{{ item.subnet }}_route'
      environment: '{{ envname }}'
      net: '{{ item.subnet }}'
    subnets: ["{{ (tikal_ec2_vpc_subnet_facts.subnets|selectattr('tags.net', 'equalto', item.subnet)|first).id }}"]
    routes: '{{ item.routes }}'
  register: routing_tables
- name: Create security groups
  with_items: '{{ security_groups }}'
  ec2_group:
      description: '{{ item.description }}'
      name: '{{ item.name }}'
      vpc_id: '{{ tikal_current_vpc.vpc.id }}'
      region: '{{ region }}'
      state: present
      rules: '{{ item.rules|default(omit) }}'

