---
- name: get vpcs facts
  ec2_vpc_net_facts:
    region: "{{ region }}"
  register: tikal_ec2_vpc_net_facts
- name: set fact current vpc id
  set_fact:
    current_vpc_id: "{{ tikal_ec2_vpc_net_facts.vpcs | list | selectattr('tags.Name', 'equalto', envname)| map(attribute='id')| list }}"
- debug:
    var: current_vpc_id
- name: set fact current vpc cidr block
  set_fact:
    current_vpc_cidr_block: "{{ tikal_ec2_vpc_net_facts.vpcs | list | selectattr('tags.Name', 'equalto', envname)| map(attribute='cidr_block')| list }}"
- name: get facts current vpc nat gateway
  ec2_vpc_nat_gateway_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ current_vpc_id }}"
  register: current_vpc_nat_gateway
- name: delete current vpc nat gateway
  ec2_vpc_nat_gateway:
    region: "{{ region }}"
    nat_gateway_id: "{{ current_vpc_nat_gateway.result[0].nat_gateway_id }}"
    state: absent
    wait: yes
- name: get facts ec2_vpc_subnet_facts
  ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ current_vpc_id }}"
  register: current_vpc_subnets
- name: delete current vpc subnets
  local_action:
    module: ec2_vpc_subnet
    region: "{{ region }}"
    vpc_id: "{{ current_vpc_id }}"
    cidr: "{{ item.cidr_block }}"
    state: absent
  with_items: "{{ current_vpc_subnets.subnets }}"
- name: get facts current vpc routing tables
  ec2_vpc_route_table_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ current_vpc_id }}"
  register: current_vpc_routing_tables
- name: delete routing tables in current vpc
  ec2_vpc_route_table:
    region: "{{ region }}"
    route_table_id: "{{ item.id }}"
    vpc_id: "{{ current_vpc_id }}"
    state: absent
  with_items: "{{ current_vpc_routing_tables.route_tables }}"
- name: delete VPC
  ec2_vpc_net:
    region: "{{ region }}"
    cidr_block: "{{ current_vpc_cidr_block }}"
    name: "{{ envname }}"
    state: absent